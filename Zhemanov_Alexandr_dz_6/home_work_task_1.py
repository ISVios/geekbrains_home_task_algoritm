#!/bin/env python3

# 1. Подсчитать, сколько было выделено памяти под переменные в ранее разработанных программах в рамках первых трех уроков. 
#   Проанализировать результат и определить программы с наиболее эффективным использованием памяти.

# OS: linux Manjro 64bit python: 3.10.4

################################################################################
# 1 урок 1 задание
# Найти сумму и произведение цифр трехзначного числа, которое вводит пользователь.

# трехзначное число => 100 ... 999

input_num = int(input()) # 28 + 49+n(количество введенных символов)

if input_num < 100 or input_num > 999:
    raise ValueError

sum_nums = 0  # 24 ~~ 28
prod_nums = 1 # 28

tmp = input_num # 28 

while tmp > 0:
    sum_nums += tmp % 10
    prod_nums *= tmp % 10
    tmp //= 10

print(f"sum {sum_nums}\t prod {prod_nums}")

# T1(n) = 28 + 28 + 28 + 28 + 49 + n = 161 + n 
# для 0..9     => 162
# для 10..99   => 163
# для 100..999 => 164
# memO(n)


################################################################################
# 1 урок 3 задание
# По введенным пользователем координатам двух точек вывести уравнение прямой вида y=kx+b, проходящей через эти точки.

coords = [] # 56

for i in range(4): # 28 +  4 * (49 + n) + 48 + 8
    print(f"введите координату {'x' if i % 2 == 0 else 'y'} {'первой' if i < 2 else 'второй'} точки")
    coords.append(float(input())) # (49 + n[i]) + 48 + 8 
    # input -> 49 + n
    # float -> 48
    # coords.append -> 8

x1_min_x2 = coords[0] - coords[2]       # 48

if x1_min_x2 == 0:
    raise ValueError

k = (coords[1] - coords[3]) / x1_min_x2 # 48
b = coords[3] - k * coords[2]           # 48
res = f"y = {k:.3f}x + {b:.3f}"

print(f"уравнение прямой {res}")


# T2(n) = 56 + 28 +  4 * ((49 + n[i]) + 48 + 8) + 48 * 3 = 228 + 4 * (n[i] + 106) = 228 + 4 * n[i] + 424 = 652 + sum(n[i])
# n[i] - так как размер вводимых значений может оличаться.
# memO(n)


################################################################################
# 2 урок 7 задание
# Напишите программу, доказывающую или проверяющую, что для множества натуральных чисел выполняется равенство: 
# 1+2+...+n = n(n+1)/2, где n - любое натуральное число.

input_n = int(input("input n of elemets of (1 + 2 + ... + n): ")) # 28 + 49 + n 
sum_n = 0 # 24 ~~ 28

for i in range(1,input_n+1): # 48 + 28 
    sum_n += i

check = sum_n == input_n * (input_n + 1) / 2 # 28

print("1 + 2 + .. n ", end="")
print("==" if check else "!=", end="")
print(" n(n + 1) / 2 ")

# T3(n) = 28 + 49 + n + 28 + 48 + 28 + 28 = 209 + n 
# memO(n)



# T1(0)     = 161 + 0 = 161
# T2(0...0) = 652 + 0 = 652 
# T3(0)     = 209 + 0 = 209 

# Задача из 1 урока( 1 задание) является экономичнее по памяти.
